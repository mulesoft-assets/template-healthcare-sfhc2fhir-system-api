<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" 
	xmlns:http="http://www.mulesoft.org/schema/mule/http" 
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="api-config" raml="healthcare-system-api.raml" consoleEnabled="false" doc:name="Router" >
    </apikit:config>
    <context:property-placeholder location="common.properties, mule.${mule.env}.properties"/>
    <sfdc:config name="Salesforce__Basic_Authentication" username="${sfdc.username}" password="${sfdc.password}" securityToken="${sfdc.token}" doc:name="Salesforce: Basic Authentication" disableSessionInvalidation="true">
        <reconnect/>
    </sfdc:config>
    <validation:config name="Validation_Configuration" doc:name="Validation Configuration"/>
    
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <logger message="#[message.inboundProperties.'http.method'] #[message.inboundProperties.'http.request.uri'] #[&quot;\n&quot; + message.payloadAs(java.lang.String)]" level="INFO" doc:name="Log request"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="put:/Patient/{id}:application/json:api-config">



        <dw:transform-message doc:name="Prepare update of  the EhrPatient in SFHC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	Id                                    : flowVars.id,
	HealthCloudGA__SourceSystemId__c      : payload.identifier[0].value,
	HealthCloudGA__Address1City__c        : payload.address[0].city,
	HealthCloudGA__Address1Country__c     : payload.address[0].country,
	HealthCloudGA__Address1Line1__c       : payload.address[0].line[0],
	HealthCloudGA__Address1Line2__c       : "",
	HealthCloudGA__Address1PostalCode__c  : payload.address[0].postalCode,
	HealthCloudGA__Address1State__c       : payload.address[0].state,
	HealthCloudGA__FamilyName1__c         : payload.name[0].family[0] when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__GenderLabel__c         : payload.gender,
	HealthCloudGA__GivenName1__c          : payload.name[0].given[0] when (payload.name[0].given[0] != null) otherwise "",
	HealthCloudGA__MaritalStatusCode__c   : payload.maritalStatus.coding[0].code,
	HealthCloudGA__MaritalStatusLabel__c  : payload.maritalStatus.coding[0].display,
	HealthCloudGA__MaritalStatusSystem__c : payload.maritalStatus.coding[0].system,
	HealthCloudGA__MedicalRecordNumber__c : payload.identifier[0].value,
	HealthCloudGA__Name__c: ((payload.name[0].given[0] ++ " ") when (payload.name[0].given[0] != null) otherwise "") 
			++ (payload.name[0].family[0]) when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__Telecom1Use__c         : payload.telecom[0].use,
	HealthCloudGA__Telecom1Value__c       : payload.telecom[0].value,
	HealthCloudGA__Telecom2Use__c         : payload.telecom[1].use,
	HealthCloudGA__Telecom2Value__c       : payload.telecom[1].value,
	(HealthCloudGA__BirthDate__c          : payload.birthDate as :date) when payload.birthDate != null
}]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:update-single config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrPatient__c" doc:name="Update EhrPatient"/>


        <logger message="Patient with ID #[payload.id] was updated succesfully." level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="post:/Patient:application/json:api-config">
        <dw:transform-message doc:name="Prepare create of the Ehr(Candidate) Patient in SFHC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	HealthCloudGA__SourceSystemId__c      : payload.identifier[0].value,
	HealthCloudGA__Address1City__c        : payload.address[0].city,
	HealthCloudGA__Address1Country__c     : payload.address[0].country,
	HealthCloudGA__Address1Line1__c       : payload.address[0].line[0],
	HealthCloudGA__Address1Line2__c       : "",
	HealthCloudGA__Address1PostalCode__c  : payload.address[0].postalCode,
	HealthCloudGA__Address1State__c       : payload.address[0].state,
	HealthCloudGA__FamilyName1__c         : payload.name[0].family[0] when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__GenderLabel__c         : payload.gender,
	HealthCloudGA__GivenName1__c          : payload.name[0].given[0] when (payload.name[0].given[0] != null) otherwise "",
	HealthCloudGA__MaritalStatusCode__c   : payload.maritalStatus.coding[0].code,
	HealthCloudGA__MaritalStatusLabel__c  : payload.maritalStatus.coding[0].display,
	HealthCloudGA__MaritalStatusSystem__c : payload.maritalStatus.coding[0].system,
	HealthCloudGA__MedicalRecordNumber__c : payload.identifier[0].value,
	HealthCloudGA__Name__c: ((payload.name[0].given[0] ++ " ") when (payload.name[0].given[0] != null) otherwise "") 
			++ (payload.name[0].family[0]) when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__Telecom1Use__c         : payload.telecom[0].use,
	HealthCloudGA__Telecom1Value__c       : payload.telecom[0].value,
	HealthCloudGA__Telecom2Use__c         : payload.telecom[1].use,
	HealthCloudGA__Telecom2Value__c       : payload.telecom[1].value,
	(HealthCloudGA__BirthDate__c          : payload.birthDate as :date) when payload.birthDate != null
}]]]></dw:set-payload>
            <dw:set-variable variableName="activeVar"><![CDATA[%dw 1.0
%output application/java
---
payload.active]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars.activeVar !=null &amp;&amp; flowVars.activeVar == 'true']">
                <enricher source="#[payload]" target="#[flowVars.accountId]" doc:name="Message Enricher">
                    <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT HealthCloudGA__AccountId__c FROM HealthCloudGA__CandidatePatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[payload[0].HealthCloudGA__SourceSystemId__c]' AND HealthCloudGA__IsConvertedToPatient__c = true" doc:name="Check for Candidate Patient's Account"/>
                </enricher>
                <validation:is-not-null doc:name="Validate if Candidate Patient was converted in SFHC" message="Could not create EhrPatient . Inconsistent state of Candidate Patient - converted Candidate Patient must have associated Account." value="#[flowVars.accountId]"/>
                <dw:transform-message doc:name="Enhance payload with Account">
                    <dw:input-payload doc:sample="sample_data\list_map.dwl"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload[0] 
	++ 
	HealthCloudGA__Account__c: flowVars.accountId.HealthCloudGA__AccountId__c
]]]></dw:set-payload>
                </dw:transform-message>

                <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrPatient__c" doc:name="Create EhrPatient">
                    <sfdc:objects ref="#[payload]"/>
                </sfdc:create>
                <logger message="Patient was created succesfully." level="INFO" doc:name="Log the success"/>
            </when>
            <otherwise>
                <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__CandidatePatient__c" doc:name="Create new Candidate Patient">
                    <sfdc:objects ref="#[payload]"/>
                </sfdc:create>
                <logger message="Candidate Patient was created succesfully." level="INFO" doc:name="Log the success"/>
            </otherwise>
        </choice>

        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/Patient:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[message.inboundProperties.'http.query.params'.identifier]'" doc:name="Get EhrPatient's Id from SFDC"/>
        <logger level="INFO" doc:name="Log the success" message="Patient output #[payload]"/>
        <dw:transform-message doc:name="Transform to FHIR Bundle of Patients">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/Patient/" ++ payload.Id,
			resource: {
				resourceType: "Patient",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="put:/Condition/{id}:application/json:api-config">

        <dw:transform-message doc:name="Prepare create of the EhrConditions in SHDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	Id : flowVars.id,
	HealthCloudGA__SourceSystemId__c       : payload.identifier[0].value,
	HealthCloudGA__AbatementDetail255__c   : "",
	HealthCloudGA__AbatementDetail__c      : "",
	HealthCloudGA__CodeLabel__c            : payload.code.coding[0].display,
	HealthCloudGA__CodeSystem__c           : payload.code.coding[0].system,
	HealthCloudGA__Code__c                 : payload.code.coding[0].code,
	HealthCloudGA__Onset__c                : payload.onsetDateTime,
	HealthCloudGA__StatusCode__c           : payload.verificationStatus,
	HealthCloudGA__AsserterPatient__c      : payload.asserter.reference 
		when payload.asserter.reference startsWith "Patient" otherwise null,
	HealthCloudGA__AsserterPractitioner__c : payload.asserter.reference 
		when payload.asserter.reference startsWith "Practitioner" otherwise null
	
} ]]></dw:set-payload>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Name__c, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <dw:transform-message doc:name="Enhance the EhrConditions">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload ++  
	{
		HealthCloudGA__Account__c: flowVars.patient.HealthCloudGA__Account__c, 
		HealthCloudGA__Patient__c: flowVars.patient.Id
	}
]

]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:upsert config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrCondition__c" doc:name="Upsert EhrConditions" externalIdFieldName="Id">
            <sfdc:objects ref="#[payload]"/>

        </sfdc:upsert>
        <logger message="New Conditions were created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>


        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>    
    </flow>
    
    <flow name="get:/Condition:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrCondition__c WHERE HealthCloudGA__SourceSystemId__c = '#[message.inboundProperties.'http.query.params'.identifier]'" doc:name="Get EhrCondition's Id from SFDC"/>
        <logger level="INFO" doc:name="Log the success" message="Condition output #[payload]"/>
        <dw:transform-message doc:name="Transform to FHIR Bundle of Conditions">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/Condition/" ++ payload.Id,
			resource: {
				resourceType: "Condition",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    

    <flow name="post:/Condition:application/json:api-config">

        <dw:transform-message doc:name="Prepare create of the EhrConditions in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	HealthCloudGA__SourceSystemId__c       : payload.identifier[0].value,
	HealthCloudGA__AbatementDetail255__c   : "",
	HealthCloudGA__AbatementDetail__c      : "",
	HealthCloudGA__CodeLabel__c            : payload.code.coding[0].display,
	HealthCloudGA__CodeSystem__c           : payload.code.coding[0].system,
	HealthCloudGA__Code__c                 : payload.code.coding[0].code,
//	HealthCloudGA__Onset__c                : payload.onsetDateTime,
	HealthCloudGA__DateAsserted__c         : payload.onsetDateTime as :date,
	HealthCloudGA__StatusCode__c           : payload.verificationStatus,
	HealthCloudGA__AsserterPatient__c      : payload.asserter.reference 
		when payload.asserter.reference startsWith "Patient" otherwise null,
	HealthCloudGA__AsserterPractitioner__c : payload.asserter.reference 
		when payload.asserter.reference startsWith "Practitioner" otherwise null

} ]]></dw:set-payload>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="save to var patient">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Name__c, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <dw:transform-message doc:name="Enhance EhrCondition">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload ++  
	{
		HealthCloudGA__Account__c: flowVars.patient.HealthCloudGA__Account__c, 
		HealthCloudGA__Patient__c: flowVars.patient.Id
	}
]

]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrCondition__c" doc:name="Create new EhrConditions">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="New Conditions were created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>


        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    <flow name="post:/AllergyIntolerance:application/json:api-config">

        <dw:transform-message doc:name="Prepare create of the EhrAllergyIntolerance in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
		HealthCloudGA__SourceSystemId__c   : payload.identifier[0].value,
		HealthCloudGA__RecorderName__c     : payload.reporter.display,
		HealthCloudGA__CriticalityLabel__c : payload.criticality,
		HealthCloudGA__SubstanceLong__c    : payload.substance.coding[0].display,	
		HealthCloudGA__Substance255__c     : payload.substance.coding[0].display,
		(HealthCloudGA__Reaction__c        : ((payload.reaction map $.manifestation.text) joinBy ', ') when (payload.reaction is :array) otherwise payload.reaction) when (payload.reaction != null),
		HealthCloudGA__RecordedDate__c     : payload.recordedDate as :date default null
}]]></dw:set-payload>
            <dw:set-variable variableName="reporter"><![CDATA[%dw 1.0
%output application/java
---
{
	number : (payload.reporter.reference splitBy '/')[-1],
	type : (payload.reporter.reference splitBy '/')[0]
} when payload.reporter != null otherwise null
]]></dw:set-variable>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>

        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="save to var patient">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Name__c, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <enricher source="#[payload != null ? payload.Id : null]" target="#[flowVars.practitionerId]" doc:name="save to var practitionerId">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrPractitioner__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.reporter.number]'" doc:name="Get EhrPractitioner from SFDC"/>
         </enricher>

        
        <dw:transform-message doc:name="Enhance EhrAllergyIntolerances">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload ++  {
		"HealthCloudGA__Account__c": flowVars.patient.HealthCloudGA__Account__c, 
		"HealthCloudGA__Recorder__c": flowVars.practitionerId,
		"HealthCloudGA__Patient__c": flowVars.patient.Id
	}			
]]]></dw:set-payload>
        </dw:transform-message>

        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrAllergyIntolerance__c" doc:name="Create new EhrAllergyIntolerances">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="New AllergyIntolerances were created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>

        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
	</flow>
	
	<flow name="put:/AllergyIntolerance/{id}:application/json:api-config">

	    <dw:transform-message doc:name="Prepare create of the EhrAllergyIntolerance in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
		Id                                 : flowVars.id,
		HealthCloudGA__SourceSystemId__c   : payload.identifier[0].value,
		HealthCloudGA__RecorderName__c     : payload.reporter.display,
		HealthCloudGA__CriticalityLabel__c : payload.criticality,
		HealthCloudGA__SubstanceLong__c    : payload.substance.coding[0].display,	
		HealthCloudGA__Substance255__c     : payload.substance.coding[0].display,
		(HealthCloudGA__Reaction__c        : ((payload.reaction map $.manifestation.text) joinBy ', ') when (payload.reaction is :array) otherwise payload.reaction) when (payload.reaction != null),
		HealthCloudGA__RecordedDate__c     : payload.recordedDate as :date default null
}]]></dw:set-payload>
            <dw:set-variable variableName="reporter"><![CDATA[%dw 1.0
%output application/java
---
{
	number : (payload.reporter.reference splitBy '/')[-1],
	type : (payload.reporter.reference splitBy '/')[0]
} when payload.reporter != null otherwise null
]]></dw:set-variable>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Name__c, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <enricher source="#[payload != null ? payload.Id : null]" target="#[flowVars.practitionerId]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrPractitioner__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.reporter.number]'" doc:name="Get EhrPractitioner from SFDC"/>
         </enricher>
        
        <dw:transform-message doc:name="Enhance EhrAllergyIntolerances">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload ++  {
		HealthCloudGA__Account__c: flowVars.patient.HealthCloudGA__Account__c, 
		HealthCloudGA__Recorder__c: flowVars.practitionerId,
		HealthCloudGA__Patient__c: flowVars.patient.Id
	}			
]

]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:upsert config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrAllergyIntolerance__c" doc:name="Upsert EhrAllergyIntolerances" externalIdFieldName="Id">
            <sfdc:objects ref="#[payload]"/>

        </sfdc:upsert>
        <logger message="New AllergyIntolerances were created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>

        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
	
	</flow>
    
    <flow name="get:/AllergyIntolerance:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrAllergyIntolerance__c WHERE HealthCloudGA__SourceSystemId__c = '#[message.inboundProperties.'http.query.params'.identifier]'" doc:name="Get EhrAllergyIntolerance's Id from SFDC"/>
        <logger level="INFO" doc:name="Log the success" message="AllergyIntolerance output #[payload]"/>
        <dw:transform-message doc:name="Transform to FHIR Bundle of AllergyIntolerances">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/AllergyIntolerance/" ++ payload.Id,
			resource: {
				resourceType: "AllergyIntolerance",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>

    <flow name="post:/MedicationOrder:application/json:api-config">
        <dw:transform-message doc:name="Prepare create of the EhrMedicationPrescriptions in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	HealthCloudGA__DateWritten__c                  : now as :date,
	HealthCloudGA__DispenseMedicationCodeSystem__c : payload.medicationCodeableConcept.coding[1].system,
	HealthCloudGA__DispenseMedicationCode__c       : payload.medicationCodeableConcept.coding[1].code,
	HealthCloudGA__DispenseMedicationName__c       : payload.medicationCodeableConcept.coding[1].display,
	HealthCloudGA__DispenseQuantityUnit__c         : payload.dosageInstruction[0].doseQuantity.unit,
	HealthCloudGA__DispenseQuantityValue__c        : payload.dosageInstruction[0].doseQuantity.value,
	HealthCloudGA__MedicationCodeLabel__c          : payload.medicationCodeableConcept.coding[1].display,
	HealthCloudGA__MedicationCodeSystem__c         : payload.medicationCodeableConcept.coding[1].system,
	HealthCloudGA__MedicationCode__c               : payload.medicationCodeableConcept.coding[1].code,
	HealthCloudGA__MedicationName__c               : payload.medicationCodeableConcept.text,
	HealthCloudGA__PrescriberName__c               : payload.prescriber.display,
	HealthCloudGA__StatusCode__c                   : payload.status,
	HealthCloudGA__ReasonCode__c                   : payload.reasonCodeableConcept.coding.display
}]]></dw:set-payload>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Account__c, HealthCloudGA__Name__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>

        <dw:transform-message doc:name="Enhance EhrMedicationPrescription data">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload ++  {
		HealthCloudGA__Account__c: flowVars.patient.HealthCloudGA__Account__c, 
		HealthCloudGA__Patient__c: flowVars.patient.Id
	}			
]
]]></dw:set-payload>
        </dw:transform-message>

        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrMedicationPrescription__c" doc:name="Create new EhrMedicationPrescriptions">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="New Medication Prescriptions were created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
"Success": true]]></dw:set-payload>
        </dw:transform-message>


    </flow>
    <flow name="post:/Observation:application/json:api-config">
        <dw:transform-message doc:name="Prepare create of the EhrObservations in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{

	HealthCloudGA__AppliesDateTime__c         : payload.effectiveDateTime as :date default null,
	HealthCloudGA__SourceSystemId__c          : payload.identifier[0].value,
	HealthCloudGA__NameCode__c                : payload.code.coding[0].code,
	HealthCloudGA__NameLabel__c               : payload.code.coding[0].display,
	HealthCloudGA__NameSystem__c              : payload.code.coding[0].system,
	HealthCloudGA__ReferenceRangeHighUnit__c  : payload.referenceRange[0].high.unit,
	HealthCloudGA__ReferenceRangeHighValue__c : payload.referenceRange[0].high.value,
	HealthCloudGA__ReferenceRangeLowUnit__c   : payload.referenceRange[0].low.unit,
	HealthCloudGA__ReferenceRangeLowValue__c  : payload.referenceRange[0].low.value,
	HealthCloudGA__ValueCode__c               : payload.valueQuantity.code,
	HealthCloudGA__ValueLabel__c              : payload.valueQuantity.system,
	HealthCloudGA__ValueQuantityUnit__c       : payload.valueQuantity.unit,
	HealthCloudGA__ValueQuantity__c           : payload.valueQuantity.value
}

]]></dw:set-payload>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.subject.reference splitBy "/")[-1]]]></dw:set-variable>
            <dw:set-variable variableName="deviceID"><![CDATA[%dw 1.0
%output application/java
---
(payload.device.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Name__c, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <choice doc:name="Contains device reference?">
            <when expression="#[flowVars.deviceID != null]">
                <enricher source="#[payload]" target="#[flowVars.device]" doc:name="Message Enricher">
                    <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Manufacturer__c, HealthCloudGA__Model__c FROM HealthCloudGA__EhrDevice__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.deviceID]'" doc:name="Get Device by identifier"/>
                </enricher>
            </when>
            <otherwise>
                <logger message="No device reference" level="INFO" doc:name="No device reference"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Append to Observation">
            <dw:input-variable doc:sample="string.dwl" variableName="inputJson"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
	payload ++  
	{
		HealthCloudGA__Account__c: flowVars.patient.HealthCloudGA__Account__c,
		HealthCloudGA__Patient__c: flowVars.patient.Id,
		HealthCloudGA__Device__c : flowVars.device.Id
	}
]


]]></dw:set-payload>
        </dw:transform-message>


        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrObservation__c" doc:name="Create new EhrObservations">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="New Observations were created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>


        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    <flow name="get:/Observation:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrObservation__c WHERE HealthCloudGA__SourceSystemId__c = #[message.inboundProperties.'http.query.params'.identifier]" doc:name="Get EhrObservation's Id from SFDC"/>
        <logger message="Observation output #[payload]" level="INFO" doc:name="Log the success"/>
 <dw:transform-message doc:name="Transform to FHIR Bundle of Observations">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/Observation/" ++ payload.Id,
			resource: {
				resourceType: "Observation",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    <flow name="post:/Device:application/json:api-config">
<dw:transform-message doc:name="Prepare create of the EhrDevice in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	HealthCloudGA__Manufacturer__c   : payload.manufacturer,
	HealthCloudGA__Model__c          : payload.model,
	HealthCloudGA__Type__c           : payload.type.text,	
	HealthCloudGA__SourceSystemId__c : payload.id,
	HealthCloudGA__Contact__c        : payload.contact[0].value	
}
]]></dw:set-payload>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Account__c, HealthCloudGA__Name__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <dw:transform-message doc:name="Enhance EhrDevice data">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
payload ++  HealthCloudGA__Patient__c: flowVars.patient.Id			
]
]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrDevice__c" doc:name="Create new EhrDevice">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="New Device was created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/Device:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrDevice__c WHERE HealthCloudGA__SourceSystemId__c = '#[message.inboundProperties.'http.query.params'.identifier]'" doc:name="Get EhrDevice's Id from SFDC"/>
        <logger message="Device output #[payload]" level="INFO" doc:name="Log the success"/>
 <dw:transform-message doc:name="Transform to FHIR Bundle of Devices">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/Device/" ++ payload.Id,
			resource: {
				resourceType: "Device",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="put:/Device/{id}:application/json:api-config">

    <dw:transform-message doc:name="Prepare create of the EhrDevice in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	Id                               : flowVars.id,
	HealthCloudGA__Manufacturer__c   : payload.manufacturer,
	HealthCloudGA__Model__c          : payload.model,
	HealthCloudGA__Type__c           : payload.type.text,	
	HealthCloudGA__SourceSystemId__c : payload.id,
	HealthCloudGA__Contact__c        : payload.contact[0].value	
}
]]></dw:set-payload>
            <dw:set-variable variableName="patientID"><![CDATA[%dw 1.0
%output application/java
---
(payload.patient.reference splitBy "/")[-1]]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.patient]" doc:name="Message Enricher">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Account__c, HealthCloudGA__Name__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patientID]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <dw:transform-message doc:name="Enhance EhrDevice data">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
payload ++  HealthCloudGA__Patient__c: flowVars.patient.Id			
]
]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:upsert config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrDevice__c" doc:name="Upsert EhrDevice" externalIdFieldName="Id">
            <sfdc:objects ref="#[payload]"/>

        </sfdc:upsert>
        <logger message="New Device was created succesfully, payload is: #[payload]" level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    
    <flow name="post:/Practitioner:application/json:api-config">
        <dw:transform-message doc:name="Prepare create of the EhrPractitioner in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	HealthCloudGA__Address1City__c      : payload.address[0].city,
	HealthCloudGA__Address1Country__c   : payload.address[0].country,
	HealthCloudGA__Address1Line1__c     : payload.address[0].line[0],
	HealthCloudGA__Address1Line2__c     : "",
	HealthCloudGA__Address1PostalCode__c: payload.address[0].postalCode,
	HealthCloudGA__Address1State__c     : payload.address[0].state,
	HealthCloudGA__Address1Use__c       : payload.address[0].use,
	HealthCloudGA__FamilyName1__c       : payload.name[0].family[0] when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__Gender__c            : payload.gender,
	HealthCloudGA__GivenName1__c        : payload.name[0].given[0] when (payload.name[0].given[0] != null) otherwise "",
	HealthCloudGA__Name255__c           : ((payload.name[0].given[0] ++ " ") when (payload.name[0].given[0] != null) otherwise "") 
			++ (payload.name[0].family[0]) when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__PrefixName1__c       : payload.name[0].prefix[0],
	HealthCloudGA__SourceSystemId__c    : payload.identifier[0].value,
	HealthCloudGA__SpecialtyCode__c     : payload.practitionerRole[0].specialty[0].coding[0].code,
	HealthCloudGA__SpecialtySystem__c   : payload.practitionerRole[0].specialty[0].coding[0].system,
	HealthCloudGA__SuffixName1__c       : payload.name[0].suffix[0],
	HealthCloudGA__Telecom1Use__c       : (payload.telecom filter $.system == "phone")[0].use,
	HealthCloudGA__Telecom1Value__c     : (payload.telecom filter $.system == "phone")[0].value,
	HealthCloudGA__Telecom1System__c    : (payload.telecom filter $.system == "phone")[0].system,
	HealthCloudGA__Telecom2Use__c       : (payload.telecom filter $.system == "fax")[0].use,
	HealthCloudGA__Telecom2Value__c     : (payload.telecom filter $.system == "fax")[0].value,
	HealthCloudGA__Telecom2System__c    : (payload.telecom filter $.system == "fax")[0].system,
	HealthCloudGA__Telecom3Use__c       : (payload.telecom filter $.system == "email")[0].use,
	HealthCloudGA__Telecom3Value__c     : (payload.telecom filter $.system == "email")[0].value,
	HealthCloudGA__Telecom3System__c    : (payload.telecom filter $.system == "email")[0].system,
	(HealthCloudGA__BirthDate__c        : payload.birthDate as :date) when payload.birthDate != null
}]]]></dw:set-payload>
        </dw:transform-message>

        
           <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrPractitioner__c" doc:name="Create new EhrPractitioner">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>


        <logger message="New Practitioner created, payload is: #[payload]" level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="put:/Practitioner/{id}:application/json:api-config">
     <dw:transform-message doc:name="Prepare create of the EhrPractitioner in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	Id : flowVars.id,
	HealthCloudGA__Address1City__c       : payload.address[0].city,
	HealthCloudGA__Address1Country__c    : payload.address[0].country,
	HealthCloudGA__Address1Line1__c      : payload.address[0].line[0],
	HealthCloudGA__Address1Line2__c      : "",
	HealthCloudGA__Address1PostalCode__c : payload.address[0].postalCode,
	HealthCloudGA__Address1State__c      : payload.address[0].state,
	HealthCloudGA__Address1Use__c        : payload.address[0].use,
	HealthCloudGA__FamilyName1__c        : payload.name[0].family[0] when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__Gender__c             : payload.gender,
	HealthCloudGA__GivenName1__c         : payload.name[0].given[0] when (payload.name[0].given[0] != null) otherwise "",
	HealthCloudGA__Name255__c            : ((payload.name[0].given[0] ++ " ") when (payload.name[0].given[0] != null) otherwise "") 
			++ (payload.name[0].family[0]) when (payload.name[0].family[0] != null) otherwise "",
	HealthCloudGA__PrefixName1__c        : payload.name[0].prefix[0],
	HealthCloudGA__SourceSystemId__c     : payload.identifier[0].value,
	HealthCloudGA__SpecialtyCode__c      : payload.practitionerRole[0].specialty[0].coding[0].code,
	HealthCloudGA__SpecialtySystem__c    : payload.practitionerRole[0].specialty[0].coding[0].system,
	HealthCloudGA__SuffixName1__c        : payload.name[0].suffix[0],
	HealthCloudGA__Telecom1Use__c        : (payload.telecom filter $.system == "phone")[0].use,
	HealthCloudGA__Telecom1Value__c      : (payload.telecom filter $.system == "phone")[0].value,
	HealthCloudGA__Telecom1System__c     : (payload.telecom filter $.system == "phone")[0].system,
	HealthCloudGA__Telecom2Use__c        : (payload.telecom filter $.system == "fax")[0].use,
	HealthCloudGA__Telecom2Value__c      : (payload.telecom filter $.system == "fax")[0].value,
	HealthCloudGA__Telecom2System__c     : (payload.telecom filter $.system == "fax")[0].system,
	HealthCloudGA__Telecom3Use__c        : (payload.telecom filter $.system == "email")[0].use,
	HealthCloudGA__Telecom3Value__c      : (payload.telecom filter $.system == "email")[0].value,
	HealthCloudGA__Telecom3System__c     : (payload.telecom filter $.system == "email")[0].system,
	(HealthCloudGA__BirthDate__c         : payload.birthDate as :date) when payload.birthDate != null
}]]]></dw:set-payload>
        </dw:transform-message>
        
           <sfdc:update config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrPractitioner__c" doc:name="Update EhrPractitioner">
            <sfdc:objects ref="#[payload]"/>

        </sfdc:update>


        <logger message="New Practitioner created, payload is: #[payload]" level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/Practitioner:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrPractitioner__c WHERE HealthCloudGA__SourceSystemId__c = '#[message.inboundProperties.'http.query.params'.identifier]'" doc:name="Get EhrPractitioner's Id from SFDC"/>
        <logger level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform to FHIR Bundle of Practitioners">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/Practitioner/" ++ payload.Id,
			resource: {
				resourceType: "Practitioner",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
<flow name="post:/Appointment:application/json:api-config">
        <dw:transform-message doc:name="Prepare create of the EhrEncounter in SFDC and store encunter participants in variables">
            <dw:input-payload doc:sample="sample_data\json_1.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	HealthCloudGA__LengthUnit__c     : "min",
	HealthCloudGA__LengthValue__c    : payload.minutesDuration,
	HealthCloudGA__PeriodEnd__c      : payload.end as :datetime default null,
	HealthCloudGA__PeriodStart__c    : payload.start as :datetime default null,
	HealthCloudGA__SourceSystemId__c : payload.identifier[0].value,
	HealthCloudGA__Status__c         : payload.status,
	HealthCloudGA__TypeLabel__c      : payload.description
}]]></dw:set-payload>
            <dw:set-variable variableName="practitioner"><![CDATA[%dw 1.0
%output application/java
---
using (practitionerRef = (payload.participant.actor.reference filter ($ startsWith "Practitioner"))[0])
{
	"participantId":  (practitionerRef splitBy "/")[-1] default ""
}]]></dw:set-variable>
            <dw:set-variable variableName="patient"><![CDATA[%dw 1.0
%output application/java
---
using (patientRef = (payload.participant.actor.reference filter ($ startsWith "Patient"))[0])
{
	"participantId":  (patientRef splitBy "/")[-1] default ""
}]]></dw:set-variable>
            <dw:set-variable variableName="appointmentId"><![CDATA[%dw 1.0
%output application/java
---
payload.id]]></dw:set-variable>
        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.ehrPatient]" doc:name="Set ehrPatient variable">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patient.participantId]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <dw:transform-message doc:name="Enhance EhrEncounter with ehrPatient">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
payload ++  {HealthCloudGA__Account__c: flowVars.ehrPatient.HealthCloudGA__Account__c, HealthCloudGA__Patient__c: flowVars.ehrPatient.Id}			
]
]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrEncounter__c" doc:name="Create EhrEncounter">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="Encounter was created, payload is: #[payload]" level="INFO" doc:name="Log success"/>
        <flow-ref name="createEncounterParticipantSubFlow" doc:name="createEncounterParticipantSubFlow"/>
        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>

    <flow name="put:/Appointment/{id}:application/json:api-config">
        <dw:transform-message doc:name="Prepare create of the EhrEncounter in SFDC and store encunter participants in variable">
            <dw:input-payload doc:sample="sample_data\json_1.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	Id                               : inboundProperties.'http.uri.params'.id,
	HealthCloudGA__LengthUnit__c     : "min",
	HealthCloudGA__LengthValue__c    : payload.minutesDuration,
	HealthCloudGA__PeriodEnd__c      : payload.end as :datetime default null,
	HealthCloudGA__PeriodStart__c    : payload.start as :datetime default null,
	HealthCloudGA__SourceSystemId__c : payload.identifier[0].value,
	HealthCloudGA__Status__c         : payload.status,
	HealthCloudGA__TypeLabel__c      : payload.description
}]]></dw:set-payload>
            <dw:set-variable variableName="practitioner"><![CDATA[%dw 1.0
%output application/java
---
using (practitionerRef = (payload.participant.actor.reference filter ($ startsWith "Practitioner"))[0])
{
	"participantId":  (practitionerRef splitBy "/")[-1] default ""
}]]></dw:set-variable>
            <dw:set-variable variableName="patient"><![CDATA[%dw 1.0
%output application/java
---
using (patientRef = (payload.participant.actor.reference filter ($ startsWith "Patient"))[0])
{
	"participantId":  (patientRef splitBy "/")[-1] default ""
}]]></dw:set-variable>
            <dw:set-variable variableName="appointmentId"><![CDATA[%dw 1.0
%output application/java
---
payload.id]]></dw:set-variable>
            <dw:set-variable variableName="sfdcEncounterId"><![CDATA[%dw 1.0
%output application/java
---
inboundProperties.'http.uri.params'.id]]></dw:set-variable>

        </dw:transform-message>
        <enricher source="#[payload]" target="#[flowVars.ehrPatient]" doc:name="Set ehrPatient variable">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id, HealthCloudGA__Account__c FROM HealthCloudGA__EhrPatient__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.patient.participantId]'" doc:name="Get EhrPatient from SFDC"/>
        </enricher>
        <dw:transform-message doc:name="Enhance EhrEncounter with ehrPatient">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[
payload ++  {HealthCloudGA__Account__c: flowVars.ehrPatient.HealthCloudGA__Account__c, HealthCloudGA__Patient__c: flowVars.ehrPatient.Id}			
]
]]></dw:set-payload>
        </dw:transform-message>
        
        <sfdc:upsert config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrEncounter__c" doc:name="Upsert EhrEncounter" externalIdFieldName="Id">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:upsert>
        <logger message="Encounter was upserted, payload is: #[payload]" level="INFO" doc:name="Log success"/>


        <flow-ref name="deleteObsoleteEncounterParticipantsSubFlow" doc:name="deleteObsoleteEncounterParticipants"/>
        <flow-ref name="createEncounterParticipantSubFlow" doc:name="createEncounterParticipantSubFlow"/>

        <dw:transform-message doc:name="Transform response to JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>    
    
     <flow name="get:/Appointment:api-config">
        <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrEncounter__c WHERE HealthCloudGA__SourceSystemId__c = '#[message.inboundProperties.'http.query.params'.identifier]'" doc:name="Get EhrEncounter's Id from SFDC"/>
        <logger level="INFO" doc:name="Log the success"/>
        <dw:transform-message doc:name="Transform to FHIR Bundle of Appointments">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	resourceType: "Bundle",
	type: "searchset",
	link: [{
		relation: "self",
		url: "http://" ++ inboundProperties.host ++ inboundProperties."http.request.uri"
	}],
	meta: {
		lastUpdated: now
	},
	total: 0 when payload == null otherwise 1,
	entry: 
		([{
			fullUrl: "http://" ++ inboundProperties.host ++ "/api/Appointment/" ++ payload.Id,
			resource: {
				resourceType: "Appointment",
				id: payload.Id
			}
	}]) when  payload != null otherwise []
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
      <sub-flow name="deleteObsoleteEncounterParticipantsSubFlow">
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrEncounterParticipant__c WHERE HealthCloudGA__Encounter__c = '#[flowVars.sfdcEncounterId]'" doc:name="Get obsolete EhrEncounterParticipant IDs from SFDC"/>
        <sfdc:delete config-ref="Salesforce__Basic_Authentication" doc:name="Delete obsolete EhrEncounterParticipants">
            <sfdc:ids ref="#[(payload.hasNext()) ? [payload.next().Id] : []]"/>
        </sfdc:delete>
        <logger message="Deleted obsolete Encounter Participant: #[payload]" level="INFO" doc:name="Log success"/>
    </sub-flow>
    
    <sub-flow name="createEncounterParticipantSubFlow">
        <enricher source="#[payload == null ? null : payload.Id]" target="#[flowVars.sfdcEncounterId]" doc:name="Set sfdcEncounterId variable">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrEncounter__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.appointmentId]'" doc:name="Get EhrEncounter ID from SFDC"/>
        </enricher>
        <enricher source="#[payload == null ? null : payload.Id]" target="#[flowVars.sfdcPractitionerId]" doc:name="Set sfdcPractitionerId variable">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id FROM HealthCloudGA__EhrPractitioner__c WHERE HealthCloudGA__SourceSystemId__c = '#[flowVars.practitioner.participantId]'" doc:name="Get EhrPractitioner ID from SFDC"/>
        </enricher>

        <dw:transform-message doc:name="Prepare create of the EhrEncounterParticipant in SFDC">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	HealthCloudGA__Encounter__c    : flowVars.sfdcEncounterId,
	HealthCloudGA__Practitioner__c : flowVars.sfdcPractitionerId
}]]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="HealthCloudGA__EhrEncounterParticipant__c" doc:name="Create new EhrEncounterParticipant">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger message="Encounter Participant was created, payload is: #[payload]" level="INFO" doc:name="Log the success"/>
    </sub-flow>


    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot;, &quot;error&quot;: &quot;#[exception.getMessage()]&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="422">
            <apikit:exception value="org.mule.extension.validation.api.ValidationException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unprocessable Entity&quot;, &quot;error&quot;: &quot;#[exception.getMessage()]&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
   
</mule>
